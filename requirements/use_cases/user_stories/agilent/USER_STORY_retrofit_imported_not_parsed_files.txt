USER STORY: Retrofit imported-not-parsed files

As a System Administrator, I want to parse previously imported but not parsed data files and array designs so that parsed values can be stored and retrieved using programmatic APIs.

Now that new parsers are available for Agilent xml array designs and Agilent raw TXT data files, older files that are in the IMPORTED NOT PARSED state must be handled.

There are 3 tasks involved:
1. Show which experiments have files eligible for import:   2 POINTS
* A new page will be available for users with the "systemadministrator" role. This page will show a list of experiments that have data files eligible for re-import (the file types for which parsers are now available). It will also show a list of array designs eligible for re-import. The systemadministrator will be able to click on an experiment and navigate to that experiment's Manage Data Files page.
* The "My Experiment Workspace" page will now have an extra column that calls out experiments that have data files eligible for re-import. The Data Owner can then go to the Imported Data Files tab and re-import data files.

2. Allow re-import of array designs:     3 POINTS
* On the Manage Array Designs page, there will be an extra icon that allows re-import of an array design. This icon will be available only for eligible array designs (ones which are in the Imported, Not Parsed state, and for which parsers are now available).
* When the user chooses to re-import an array design, the system parses the array design file associated with that design and creates the necessary features and probes.
* If a re-import fails, the array design will end up in the IMPORT FAILED state. An error log will be stored and available for display.

3. Allow re-import of data files:     3 POINTS
* The Data -> Imported Data Files page will now allow the Data Owner to select eligible files and re-import them.
* The system first checks the array designs associated with the experiment. If none of them is in a format that is parseable, the system abandons the re-import and leaves the data files in the IMPORTED, NOT PARSED state. A warning will be available to the user.
  + An example of the above scenario is the TCGA Agilent experiments which have array designs in the MAGE-TAB ADF (unparsed) format, and not in the Agilent GEML/xml (parsed) format. If a user selects one of the Agilent TXT data files that are in the IMPORTED, NOT PARSED state and tries to re-import them, the system should deduce that since there are no parseable array designs to validate the data file against, the re-import should be abandoned, and the data file should be left in the IMPORTED, NOT PARSED state.
* If the re-import can proceed, the system parses the data files, and tries to validate them.
  + If the validation fails, the data files go into the VALIDATION FAILED state, but the data file is still associated to its Hybridization(s), ArrayData and DataSet objects.
  + If the validation succeeds, the system removes the old ArrayData, DataSet objects and does the import.
  + If the import fails, the file will be left in the IMPORT FAILED state, and will no longer be associated to the Hybridization(s) it was associated with originally.
* Special validation for an Agilent raw TXT file from a 2-colour gene expression experiment or an aCGH experiment: If such a file is found to be associated with a _single_ hybridization (as opposed to 2 hybridizations), the file will be successfully imported, but the system will include a warning about this. (The quantitation types within the TXT file will determine whether it is a 2-colour gene expression / aCGH experiment or not. See Agilent import user stories for details.)
