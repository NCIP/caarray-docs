USER STORY: Support Affymetrix AGCC CHP files

As a Curator or Data Owner, I want to import Affymetrix AGCC CHP files into caArray so that the data values can be parsed and associated with probe sets.

1. Flow:
* The flow is the same as the current data file import of CHP files, but the parser should be able to read the CHP file and parse it differently depending on the file format.
* Note: The Affy library we use for parsing Affymetrix files should be upgraded to Affx Fusion 1.1.0.

2. CHP file formats:
The CHP file contains the results from analyzed intensity data in a CEL file.
For expression arrays this is the probe set results such as signal and detection. For genotyping this is the allele calls and confidence scores.

To read a CHP file, use the FusionCHPData and FusionCHPDataReg classes.
    FusionCHPData *chp = FusionCHPDataReg::Read(fileName);  // fileName is the name of the input CHP file.

To support the multitude of expected CHP file types, the CHP parser has been written using self registering classes for each specific CHP file type. The existing CHP parsers include:
    * FusionCHPLegacyData - CHP files containing results from our legacy assays (expression, genotyping, resequencing, tag).
    * FusionCHPTilingData - CHP files containing results from the Tiling Analysis Software.
    * FusionCHPGenericData - This class provides a catch all for CHP files where a data specific interpreter is not provided. This class directly accesses the generic data file parser and data objects, no assumptions are made as to how many data groups, sets and columns are stored in the file.
    * FusionCHPQuantificationData - CHP files containing results from the RMA or PLIER algorithms from the Expression Console software for 3' Expression arrays.
    * FusionCHPQuantificationDetectionData - CHP files containing results from the Expression Console software for Exon arrays.
    * FusionCHPMultiDataData - CHP files containing genotyping analysis results from the BRLMM Analysis Tool Version 2 or Genotyping Consoleª software.

Each of the above classes contains a function (FromBase) to convert the FusionCHPData object. An example of converting to the legacy class is:
   FusionCHPLegacyData *legacychp = FusionCHPLegacyData::FromBase(chp);
The return object is NULL if the file is not an expression, genotyping, resequencing or tag CHP file (those data types supported by the FusionCHPLegacyData object).

At this point you need to decide what to do. If your application reads expression data and you want to extract the signal values for each probe set then the workflow steps are:
   1. Verify that the returned pointer from the FromBase() function is not NULL.
   2. Verify that the data in the CHP file is expression using the GetHeader().GetAssayType() function. The value should be "FusionExpression".
   3. Loop over the number of probe sets - defined by the GetHeader().GetNumProbeSets() function.
   4. Retrieve the probe set object using the GetExpressionResults() function. This returns a FusionExpressionProbeSetResults object.
   5. The signal value is retrieved using the FusionExpressionProbeSetResults.GetSignal() function.

3. Gene expression CHP files:

The contents of the CHP file depend on the format of the CHP file (GCOS/XDA or AGCC/Calvin), and the algorithm used (MAS5, RMA, PLIER).

The GCOS/XDA file format was designed to store results from the MAS5 algorithm which has a fixed number of columns of results for the absolute and comparison analyses.

The Command Console (AGCC/Calvin) file format is more flexible in that there can be any number of columns of results, of which each column can be of a variety of data types (integer, float, 8 byte string, 16 byte string as examples). When the Expression Console software uses this format for RMA and PLIER, it only needs to allocate its results table with only two columns - probe set name and signal value.

The following table shows which class to use for each format and algorithm:

GCOS/XDA format + MAS5 algorithm:         FusionCHPLegacyData
GCOS/XDA format + any other algorithm:    N/A
AGCC/Calvin format + MAS5 algorithm:      FusionCHPLegacyData
AGCC/Calvin format + RMA/PLIER algorithm: FusionCHPQuantificationData

See example C++ code here:
http://www.affymetrix.com/partners_programs/programs/developer/whitepapers/parsing_ivt_chp_files.affx#1_5

4. Genotyping CHP files:

There are two main formats of the CHP file which are supported by the Affymetrix genotyping software:
GCOS/XDA format (generated by GTYPE and BRLMM Analysis Tool) and Command Console/AGCC/Calvin format (generated by BRLMM Analysis Tool and Genotyping Console).

The older format (GCOS/XDA) only stores the analysis results, not the probe set names. To obtain the associated probe set names you will need to read either the CDF or PSI files (library files).

The newer Command Console (AGCC/Calvin) format CHP files do contain the probe set names (also known as the SNPID or Probe Set ID in the software). The format of this file allows for multiple tables of data thus allowing control probe sets results to be stored separately from the SNP probe set results.

Use FusionCHPLegacyData for GCOS/XDA and FusionCHPMultiDataData for AGCC/Calvin.

See example C++ code here:
http://www.affymetrix.com/partners_programs/programs/developer/whitepapers/parsing_genotyping_chp_files.affx#1_5

4.1 Variants of Genotyping CHP files:

The CHP files generated by the Genotyping Console software contain SNP analysis results from the Birdseed, BRLMM or Axiom GT genotyping algorithms.
Results are stored in a single group with a single data set.
The data type identifier is set to: "affymetrix-multi-data-type-analysis".
The data group containing the analysis results is called "MultiData".
SNP results are stored in a data set named "Genotype".

+ Birdseed algorithm variant:
      ProbeSetName: String
      Call: UByte (6 = AA, 7 = BB, 8 = AB, no call otherwise)
      Confidence: float - A value in the range [0,1] with lower values corresponding to greater confidence.
      ForcedCall: UByte (6 = AA, 7 = BB, 8 = AB) - the genotyping call that would be made if the calling algorithm were tuned to least stringency.
      SignalA: float
      SignalB: float

+ BRLMM algorithm variant:
      ProbeSetName: String
      Call: UByte (6 = AA, 7 = BB, 8 = AB, no call otherwise)
      Confidence: float - A value in the range [0,1] with lower values corresponding to greater confidence.
      ForcedCall: UByte (6 = AA, 7 = BB, 8 = AB) - the genotyping call that would be made if the calling algorithm were tuned to least stringency.
      Contrast: float
      Strength: float

+ Axiom GT algorithm variant:
      ProbeSetName: String
      Call: UByte (6 = AA, 7 = BB, 8 = AB, no call otherwise)
      Confidence: float - A value in the range [0,1] with lower values corresponding to greater confidence.
      ForcedCall: UByte (6 = AA, 7 = BB, 8 = AB) - the genotyping call that would be made if the calling algorithm were tuned to least stringency.
      Log Ratio: float
      Strength: float

Note:
  The older XDA or GCOS format CHP file is not supported for the Genome-Wide SNP Array 6.0, as it doesn't 
  store the SNP IDs in the file.

5. Example files:

Look under example_files/gene_expression and example_files/genotyping.

Gene expression:

* GCOS/XDA (unknown version)
  + gcos_Rat230-DemoData
  + gcos_Demo_Data_Cotton

* Command Console (AGCC/Calvin)
  + agcc_Demo_Data_Cotton_AGCC

Genotyping:

* You should be able to order a HAPMAP data set, which includes chp files from here:
  http://www.affymetrix.com/support/technical/sample_data/genomewide_snp6_data.affx

* SNP 5.0 chp file:
  http://www.affymetrix.com/support/technical/sample_data/genomewide_snp5_data.affx


